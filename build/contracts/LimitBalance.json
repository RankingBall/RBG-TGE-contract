{
  "contractName": "LimitBalance",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "limit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806100cc83398101604052516000556099806100336000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663a4d66daf81146043575b600080fd5b348015604e57600080fd5b5060556067565b60408051918252519081900360200190f35b600054815600a165627a7a72305820b9ce11f2f90f3c5f548789701925ccfabf2ce109f377baf6e2e51908f8ed86660029",
  "deployedBytecode": "0x608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663a4d66daf81146043575b600080fd5b348015604e57600080fd5b5060556067565b60408051918252519081900360200190f35b600054815600a165627a7a72305820b9ce11f2f90f3c5f548789701925ccfabf2ce109f377baf6e2e51908f8ed86660029",
  "sourceMap": "345:401:29:-;;;521:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;521:70:29;;;;;;;;;;;;;572:5;:14;345:401;;;;;;",
  "deployedSourceMap": "345:401:29:-;;;;;;;;;;;;;;;;;;;;;;;372:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;372:20:29;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\n\n/**\n * @title LimitBalance\n * @dev Simple contract to limit the balance of child contract.\n * @dev Note this doesn't prevent other contracts to send funds by using selfdestruct(address);\n * @dev See: https://github.com/ConsenSys/smart-contract-best-practices#remember-that-ether-can-be-forcibly-sent-to-an-account\n */\ncontract LimitBalance {\n\n  uint256 public limit;\n\n  /**\n   * @dev Constructor that sets the passed value as a limit.\n   * @param _limit uint256 to represent the limit.\n   */\n  function LimitBalance(uint256 _limit) public {\n    limit = _limit;\n  }\n\n  /**\n   * @dev Checks if limit was reached. Case true, it throws.\n   */\n  modifier limitedPayable() {\n    require(this.balance <= limit);\n    _;\n\n  }\n\n}\n",
  "sourcePath": "/Users/pjh/workspace/rbg-crowdsale/project/contracts/base/zeppelin/LimitBalance.sol",
  "ast": {
    "absolutePath": "/Users/pjh/workspace/rbg-crowdsale/project/contracts/base/zeppelin/LimitBalance.sol",
    "exportedSymbols": {
      "LimitBalance": [
        6349
      ]
    },
    "id": 6350,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6325,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:29"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title LimitBalance\n@dev Simple contract to limit the balance of child contract.\n@dev Note this doesn't prevent other contracts to send funds by using selfdestruct(address);\n@dev See: https://github.com/ConsenSys/smart-contract-best-practices#remember-that-ether-can-be-forcibly-sent-to-an-account",
        "fullyImplemented": true,
        "id": 6349,
        "linearizedBaseContracts": [
          6349
        ],
        "name": "LimitBalance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6327,
            "name": "limit",
            "nodeType": "VariableDeclaration",
            "scope": 6349,
            "src": "372:20:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6326,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "372:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6336,
              "nodeType": "Block",
              "src": "566:25:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6332,
                      "name": "limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6327,
                      "src": "572:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6333,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6329,
                      "src": "580:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "572:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6335,
                  "nodeType": "ExpressionStatement",
                  "src": "572:14:29"
                }
              ]
            },
            "documentation": "@dev Constructor that sets the passed value as a limit.\n@param _limit uint256 to represent the limit.",
            "id": 6337,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "LimitBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6329,
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 6337,
                  "src": "543:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "542:16:29"
            },
            "payable": false,
            "returnParameters": {
              "id": 6331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:29"
            },
            "scope": 6349,
            "src": "521:70:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6347,
              "nodeType": "Block",
              "src": "694:49:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6340,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12243,
                            "src": "708:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LimitBalance_$6349",
                              "typeString": "contract LimitBalance"
                            }
                          },
                          "id": 6341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "708:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6342,
                          "name": "limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6327,
                          "src": "724:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "708:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12141,
                        12142
                      ],
                      "referencedDeclaration": 12141,
                      "src": "700:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6345,
                  "nodeType": "ExpressionStatement",
                  "src": "700:30:29"
                },
                {
                  "id": 6346,
                  "nodeType": "PlaceholderStatement",
                  "src": "736:1:29"
                }
              ]
            },
            "documentation": "@dev Checks if limit was reached. Case true, it throws.",
            "id": 6348,
            "name": "limitedPayable",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:29"
            },
            "src": "668:75:29",
            "visibility": "internal"
          }
        ],
        "scope": 6350,
        "src": "345:401:29"
      }
    ],
    "src": "0:747:29"
  },
  "legacyAST": {
    "absolutePath": "/Users/pjh/workspace/rbg-crowdsale/project/contracts/base/zeppelin/LimitBalance.sol",
    "exportedSymbols": {
      "LimitBalance": [
        6349
      ]
    },
    "id": 6350,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6325,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:29"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title LimitBalance\n@dev Simple contract to limit the balance of child contract.\n@dev Note this doesn't prevent other contracts to send funds by using selfdestruct(address);\n@dev See: https://github.com/ConsenSys/smart-contract-best-practices#remember-that-ether-can-be-forcibly-sent-to-an-account",
        "fullyImplemented": true,
        "id": 6349,
        "linearizedBaseContracts": [
          6349
        ],
        "name": "LimitBalance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6327,
            "name": "limit",
            "nodeType": "VariableDeclaration",
            "scope": 6349,
            "src": "372:20:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6326,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "372:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6336,
              "nodeType": "Block",
              "src": "566:25:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6332,
                      "name": "limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6327,
                      "src": "572:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6333,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6329,
                      "src": "580:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "572:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6335,
                  "nodeType": "ExpressionStatement",
                  "src": "572:14:29"
                }
              ]
            },
            "documentation": "@dev Constructor that sets the passed value as a limit.\n@param _limit uint256 to represent the limit.",
            "id": 6337,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "LimitBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6329,
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 6337,
                  "src": "543:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "542:16:29"
            },
            "payable": false,
            "returnParameters": {
              "id": 6331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:29"
            },
            "scope": 6349,
            "src": "521:70:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6347,
              "nodeType": "Block",
              "src": "694:49:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6340,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12243,
                            "src": "708:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LimitBalance_$6349",
                              "typeString": "contract LimitBalance"
                            }
                          },
                          "id": 6341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "708:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6342,
                          "name": "limit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6327,
                          "src": "724:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "708:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12141,
                        12142
                      ],
                      "referencedDeclaration": 12141,
                      "src": "700:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6345,
                  "nodeType": "ExpressionStatement",
                  "src": "700:30:29"
                },
                {
                  "id": 6346,
                  "nodeType": "PlaceholderStatement",
                  "src": "736:1:29"
                }
              ]
            },
            "documentation": "@dev Checks if limit was reached. Case true, it throws.",
            "id": 6348,
            "name": "limitedPayable",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:29"
            },
            "src": "668:75:29",
            "visibility": "internal"
          }
        ],
        "scope": 6350,
        "src": "345:401:29"
      }
    ],
    "src": "0:747:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-01T09:11:30.162Z"
}